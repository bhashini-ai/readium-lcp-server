version: "3.3"

x-common-variables: &common-variables
  LCP_BASE_URL: "http://lcpserver:8091"
  LSD_BASE_URL: "http://127.0.0.1:8092"
  FRONTEND_BASE_URL: "http://127.0.0.1:8093"
  DB_URI: "mysql://admin:admin@tcp(db:3306)/readium-lcp"
  MASTER_REPOSITORY: "/raw"
  ENCRYPTED_REPOSITORY: "/encrypted"

  # The usernames and passwords must match the ones in the htpasswd files for each server.
  LSD_NOTIFY_AUTH_USER: "adm_username"
  LSD_NOTIFY_AUTH_PASS: "adm_password"
  LCP_UPDATE_AUTH_USER: "adm_username"
  LCP_UPDATE_AUTH_PASS: "adm_password"

  S3_ENDPOINTS: "http://minio:8082"
  S3_ACCESS_ID: "user" #key
  S3_SECRET: "12345678"
  S3_DISABLE_SSL_BOOL: "true"
  S3_BUCKET: "readium-lcp"
  S3_REGION: ""
  S3_TOKEN: ""

services:
  lcpserver:
    image: gcr.io/lcp-server-337422/github.com/readium/readium-lcp-server:latest-cd
    environment:
      <<: *common-variables
      LCP_HOST: "lcpserver"
      LCP_PORT: 8091 
      AUTH_FILE: "/htpasswd"
      CERTIFICATE_PATH: "/cert.pem"
      PRIVATE_KEY: "/privkey.pem"
      LOCALIZATION_LANGUAGES_ARRAY: "[\"en-US\"]"
      LOCALIZATION_FOLDER: "/i18n"
      LOCALIZATION_DEFAULT_LANGUAGE: "en-US"
    volumes:
      - "${PWD}/test/cert/cert-edrlab-test.pem:/cert.pem"
      - "${PWD}/test/cert/privkey-edrlab-test.pem:/privkey.pem"
      - "${PWD}/messages:/i18n"
      - "${PWD}/test/htpasswd:/htpasswd"
      - encrypted-data:/encrypted
    networks:
      - dbnet
      - backnet
        #    ports:
        
    depends_on:
      - db
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  lsdserver:
    image: gcr.io/lcp-server-337422/github.com/readium/readium-lsd-server:latest-cd
    environment:
      <<: *common-variables
      LSD_HOST: "lsdserver"
      LSD_PORT: 8092 
      AUTH_FILE: "/htpasswd"
      CERTIFICATE_PATH: "/cert.pem"
      PRIVATE_KEY: "/privkey.pem"
    volumes:
      - "${PWD}/test/cert/cert-edrlab-test.pem:/cert.pem"
      - "${PWD}/test/cert/privkey-edrlab-test.pem:/privkey.pem"
      - "${PWD}/test/htpasswd:/htpasswd"
    networks:
      - dbnet
      - backnet
      - webnet
    ports:
      - 8092:8092
    depends_on:
      - db
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s


  frontend:
    image: gcr.io/lcp-server-337422/github.com/readium/readium-frontend-server:latest-cd
    environment:
      <<: *common-variables
      FRONTEND_HOST: "frontend"
      FRONTEND_PORT: 8093
      # https://github.com/readium/readium-lcp-server/blob/5488039406a76b478d431d5d15c6cb0552fceb1d/docker/frontend/Dockerfile#L33
      # DIRECTORY: 
      PROVIDER_URI: "https://www.myprovidername.org"
        # RIGHT_PRINT_NUMBER:
        # RIGHT_COPY_NUMBER:
    volumes:
      - raw-data:/raw
      - encrypted-data:/encrypted
    networks:
      - dbnet
      - backnet
      - webnet
    ports:
      - 8093:8093
    depends_on:
      - db
      - minio
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s



  db:
    image: mariadb:latest
        #    restart: always
    environment:
      MARIADB_USER: admin
      MARIADB_PASSWORD: admin
      MARIADB_ROOT_PASSWORD: password
      MARIADB_DATABASE: readium-lcp
    volumes:
      - db-data:/var/lib/mysql
      - "${PWD}/dbmodel/mysql_db_setup_frontend.sql:/docker-entrypoint-initdb.d/1.sql"
      - "${PWD}/dbmodel/mysql_db_setup_lsdserver.sql:/docker-entrypoint-initdb.d/2.sql"
      - "${PWD}/dbmodel/mysql_db_setup_lcpserver.sql:/docker-entrypoint-initdb.d/3.sql"
    networks:
      - dbnet
        # ports:
        # - 3306:3306
    deploy:
      restart_policy:
        condition: any
        delay: 5s
          #  max_attempts: 3
        window: 120s


  adminer:
    image: adminer

          #restart: always
    ports:
      - 8081:8080
    networks:
      - webnet
      - dbnet
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s


  # https://raw.githubusercontent.com/minio/minio/master/docs/orchestration/docker-compose/docker-compose.yaml
  minio:
    image: quay.io/minio/minio:RELEASE.2022-01-08T03-11-54Z
    command: server --console-address ":9001" /data 
    ports:
      - 8082:9000
      - 8083:9001
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - minio-data:/data
    networks:
      - backnet
      - webnet
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        # max_attempts: 3
        window: 120s



# https://hub.docker.com/r/dockersamples/visualizer
# doesn't works with docker-compose
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet


volumes:
  minio-data:
  db-data:
  encrypted-data:

  # raw-data used in the frontend
  # you should add a sftp server to add raw files in this volume
  raw-data:

networks:
  dbnet:
  backnet:
  webnet:
